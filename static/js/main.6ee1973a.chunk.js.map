{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["mentorsList","dataFile","Object","keys","data","mentors","currentMentor","i","length","mentorLogin","mentorObject","value","label","push","task","tasksStatus","taskName","entries","getTaskName","name","values","getTaskStatus","replace","getStudenName","studentName","mentor","getStudentUrl","mentorStudents","getScore","currentTaskName","score","getStudentStatus","studentsStatus","getPrTask","pr","getCurrentMentor","localStorage","getItem","getStudent","students","setClass","setTask","map","react_default","a","createElement","key","className","rel","target","href","style","textAlign","getCheckTaskTime","commonCountTask","percent","Math","round","getStatistics","setScore","App","state","selectedOption","handleChange","_this","setState","setItem","this","react_select_esm","onChange","options","align","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ee1973a.chunk.js","sourcesContent":["/* eslint-disable no-console */\r\n// import React, { Component } from 'react';\r\nimport \"./App.scss\";\r\nimport React from \"react\";\r\nimport Select from \"react-select\";\r\nimport data from \"./data.json\";\r\n\r\nconst mentorsList = [];\r\nconst dataFile = Object.keys(data.mentors);\r\nlet currentMentor = \"\";\r\n\r\n// eslint-disable-next-line\r\nfor (let i = 0; i < dataFile.length; i++) {\r\n  const mentorLogin = dataFile[i];\r\n  const mentorObject = {};\r\n\r\n  mentorObject.value = mentorLogin;\r\n  mentorObject.label = mentorLogin;\r\n  mentorsList.push(mentorObject);\r\n}\r\n\r\nconst task = Object.keys(data.tasksStatus);\r\n\r\nconst taskName = Object.entries(data)[1][1];\r\n\r\nfunction getTaskName(name) {\r\n  const getUrl = Object.values(taskName[name]);\r\n  return getUrl[2];\r\n}\r\nfunction getCheckTaskTime(name) {\r\n  const CheckTaskTime = Object.values(taskName[name])[4];\r\n  return CheckTaskTime;\r\n}\r\nfunction getStatistics(name) {\r\n  const commonCountTask = Object.entries(data)[2][1];\r\n  const countCurrentTask = Object.values(taskName[name]);\r\n  const percent = (countCurrentTask[3] / commonCountTask) * 100;\r\n  if (percent > 0) {\r\n    return Math.round(percent) + \" %\";\r\n  }\r\n}\r\n\r\nfunction getTaskStatus(name) {\r\n  const getStatus = Object.values(taskName[name]);\r\n  return getStatus[1].replace(/\\s+/g, \"\");\r\n}\r\n\r\nfunction getStudenName(studentName, mentor) {\r\n  const getStudentUrl = Object.values(\r\n    data.mentors[mentor].mentorStudents[studentName]\r\n  );\r\n  const studentGithubUrl = Object.entries(getStudentUrl)[1][1];\r\n  return studentGithubUrl;\r\n}\r\n\r\nfunction getScore(studentName, mentor, currentTaskName) {\r\n  const getStudentUrl = Object.values(\r\n    data.mentors[mentor].mentorStudents[studentName]\r\n  );\r\n  const score = Object.entries(getStudentUrl)[3][1][currentTaskName];\r\n  if (score) {\r\n    return score;\r\n  }\r\n}\r\n\r\nfunction getStudentStatus(mentor, studentName) {\r\n  const studentsStatus = Object.values(\r\n    data.mentors[mentor].mentorStudents[studentName]\r\n  )[5];\r\n  if (studentsStatus === \"dismissed\") {\r\n    return studentsStatus + \" studentName cell\";\r\n  }\r\n  return \"studentName cell\";\r\n}\r\n\r\nfunction getPrTask(studentName, mentor, currentTaskName) {\r\n  const getStudentUrl = Object.values(\r\n    data.mentors[mentor].mentorStudents[studentName]\r\n  );\r\n  const pr = Object.entries(getStudentUrl)[4][1][currentTaskName];\r\n  const score = Object.entries(getStudentUrl)[3][1][currentTaskName];\r\n  if (getTaskStatus(currentTaskName) === \"Checking\" && (score <= 0 || !score)) {\r\n    return \"#\";\r\n  }\r\n  if (!score || score === 0) {\r\n    return;\r\n  }\r\n  return pr;\r\n}\r\n\r\nfunction getCurrentMentor(mentor) {\r\n  if (localStorage.getItem(\"currentMentor\")) {\r\n    currentMentor = localStorage.getItem(\"currentMentor\");\r\n  }\r\n  if (mentor) {\r\n    currentMentor = mentor.value;\r\n  }\r\n  return currentMentor;\r\n}\r\n\r\nconst getStudent = mentor => {\r\n  let students = [];\r\n  if (localStorage.getItem(\"currentMentor\")) {\r\n    currentMentor = localStorage.getItem(\"currentMentor\");\r\n    students = Object.keys(data.mentors[currentMentor].mentorStudents);\r\n  }\r\n  if (mentor) {\r\n    currentMentor = mentor.value;\r\n    students = Object.keys(data.mentors[currentMentor].mentorStudents);\r\n  }\r\n  return students;\r\n};\r\n\r\nfunction setClass(studentName, mentor, name) {\r\n  const studentsStatus = Object.values(\r\n    data.mentors[getCurrentMentor(mentor)].mentorStudents[studentName]\r\n  )[5];\r\n  if (\r\n    !getScore(studentName, getCurrentMentor(mentor), name) &&\r\n    getTaskStatus(name) === \"Checked\" &&\r\n    studentsStatus !== \"dismissed\"\r\n  ) {\r\n    return \"failed\";\r\n  } else if (\r\n    !getScore(studentName, getCurrentMentor(mentor), name) &&\r\n    getTaskStatus(name) === \"Checked\" &&\r\n    studentsStatus === \"dismissed\"\r\n  ) {\r\n    return \"failed dismissed\";\r\n  } else if (\r\n    getTaskStatus(name) &&\r\n    studentsStatus === \"dismissed\"\r\n  ) {\r\n    return getTaskStatus(name) + \" dismissed\";\r\n  } else {\r\n    return getTaskStatus(name);\r\n  }\r\n}\r\n\r\nfunction setStudent(mentor) {\r\n  return getStudent(mentor).map(studentName => (\r\n    <td\r\n      className={getStudentStatus(getCurrentMentor(mentor), studentName)}\r\n      key={studentName}\r\n    >\r\n      <a\r\n        className=\"link\"\r\n        rel=\"noopener noreferrer\"\r\n        target=\"_blank\"\r\n        href={getStudenName(studentName, getCurrentMentor(mentor))}\r\n      >\r\n        {studentName}\r\n      </a>\r\n    </td>\r\n  ));\r\n}\r\n\r\nfunction setScore(mentor, name) {\r\n  return getStudent(mentor).map(studentName => (\r\n    <td\r\n      style={{ textAlign: \"center\" }}\r\n      className={setClass(studentName, mentor, name)}\r\n      key={studentName}\r\n    >\r\n      <a\r\n        className=\"link\"\r\n        rel=\"noopener noreferrer\"\r\n        target=\"_blank\"\r\n        href={getPrTask(studentName, getCurrentMentor(mentor), name)}\r\n      >\r\n        {getScore(studentName, getCurrentMentor(mentor), name)}\r\n      </a>\r\n    </td>\r\n  ));\r\n}\r\n\r\nfunction setTask(mentor) {\r\n  return task.map(name => (\r\n    <tr key={name}>\r\n      <td className={getTaskStatus(name)}>\r\n        <a\r\n          className=\"link taskname\"\r\n          rel=\"noopener noreferrer\"\r\n          target=\"_blank\"\r\n          href={getTaskName(name)}\r\n        >\r\n          {name}\r\n        </a>\r\n      </td>\r\n      <td className={getTaskStatus(name)} style={{ textAlign: \"center\" }}>\r\n      {getCheckTaskTime(name)}\r\n      </td>\r\n      <td className={getTaskStatus(name)} style={{ textAlign: \"center\" }}>\r\n        {getStatistics(name)}\r\n      </td>\r\n      {setScore(mentor, name)}\r\n    </tr>\r\n  ));\r\n}\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    selectedOption: null\r\n  };\r\n\r\n  handleChange = selectedOption => {\r\n    this.setState({ selectedOption });\r\n    localStorage.setItem(\"currentMentor\", selectedOption.value);\r\n  };\r\n\r\n  render() {\r\n    const { selectedOption } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Select\r\n          value={selectedOption}\r\n          onChange={this.handleChange}\r\n          options={mentorsList}\r\n        />\r\n\r\n        <table className=\"table mentor-table\">\r\n          <thead className=\"thead\">\r\n            <tr>\r\n              <td className=\"mentorTitle\">Ментор</td>\r\n              <td className=\"mentorName\">{getCurrentMentor(selectedOption)}</td>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n        <div className=\"wrapper\">\r\n          <table align=\"center\" className=\"table task-table\">\r\n            <thead>\r\n              <tr>\r\n                <td />\r\n                <td className=\"check_time cell \">check&nbsp;time</td>\r\n                <td className=\"statistics cell\">statistics</td>\r\n                {setStudent(selectedOption)}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{setTask(selectedOption)}</tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <table className=\"table description-table\">\r\n          <tbody className=\"tbody\">\r\n            <tr>\r\n              <td className=\"Checked description-table__cell\" />\r\n              <td className=\"description-table__cell\">Checked by mentor</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"Checking description-table__cell\" />\r\n              <td className=\"description-table__cell\">Checking by mentor</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"InProgress description-table__cell\" />\r\n              <td className=\"description-table__cell\">In Progress</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"ToDo description-table__cell\" />\r\n              <td className=\"description-table__cell\">ToDo</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"failed description-table__cell\" />\r\n              <td className=\"description-table__cell\">No solution</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"dismissed description-table__cell\">\r\n                semitransparent student -{\" \"}\r\n              </td>\r\n              <td className=\"description-table__cell\"> student dismissed</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}